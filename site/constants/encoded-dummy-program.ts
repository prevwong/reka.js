export const ENCODED_DUMMY_PROGRAM = '';